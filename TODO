Look at Monocle and borrow ideas from there.  E.g. they don't seem to
have a global scheduler state (though maybe that's because they're
using Twisted/Tornado/Asyncore).

Before spending more effort on model.py, write the trampoline & cache.

Ensure that Model and Key are pickled as pbs, so caching doesn't have
to do anything special.

Ideas:
  - map(callback, query); possible notation:

    @query.map(conn)  # Or @ndb.map(query, conn)
    def _(ent):
      # Does something with ent.
      # May be a regular function or a generator:
      #   yield <rpc> returns when result is ready
      # And <rpc> may also be some other schedulable thingie
